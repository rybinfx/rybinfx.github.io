/** @module avc */
/**
 * List of profiles with their profile numbers (PP) and the constraints component (CC).
 * @constant
 * @type {import("../types.js").VCProfileItem[]}
 */
export const AVC_PROFILES: import("../types.js").VCProfileItem[];
/**
 * AVC Levels
 * @constant
 * @type {number[]}
 * @see [wikipedia.org]{@link https://en.wikipedia.org/wiki/Advanced_Video_Coding#Levels}
 */
export const AVC_LEVELS: number[];
/** @private */
export function formatCodec(cccc: any, { PP, CC }: {
    PP: any;
    CC: any;
}, LL: any): string;
/** @private */
export function formatLevel(level: any): string;
/**
 * Return a list of all possible codec parameter string and their human readable names
 * @returns {import("../types.js").MediaCodecItem[]}
 */
export function getAllItems(): import("../types.js").MediaCodecItem[];
/**
 * Get a codec parameter string
 * @param {import("../types.js").AVCCodecOptions} options
 * @returns {string}
 */
export function getCodec({ profile: profileName, level }: import("../types.js").AVCCodecOptions): string;
/**
 * Get a codec human readbable name
 * @param {string} codec a codec string (cccc.PP.LL.DD eg. "vp09.00.10.08")
 * @returns {string}
 */
export function getCodecName(codec: string): string;
