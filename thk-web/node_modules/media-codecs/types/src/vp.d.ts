/** @module vp */
/**
 * List of codecs
 * @constant
 * @type {import("../types.js").CodecItem[]}
 */
export const VP_CODECS: import("../types.js").CodecItem[];
/**
 * List of VP profiles numbers
 * @constant {number[]}
 */
export const VP_PROFILES: number[];
/**
 * VP Levels
 * @constant
 * @type {string[]}
 * @see [webmproject.org]{@link https://www.webmproject.org/vp9/mp4/}
 */
export const VP_LEVELS: string[];
/**
 * List of supported bit depth
 * @constant
 * @type {number[]}
 */
export const VP_BIT_DEPTH: number[];
/** @private  */
export function formatCodec(cccc: any, PP: any, LL: any, DD: any): string;
/** @private  */
export function formatLevel(level: any): string;
/**
 * Return a list of all possible codec parameter string and their human readable names
 * @returns {import("../types.js").MediaCodecItem[]}
 */
export function getAllItems(): import("../types.js").MediaCodecItem[];
/**
 * Get a codec parameter string
 * @param {import("../types.js").VPCodecOptions} options
 * @returns {string}
 */
export function getCodec({ name, profile, level, bitDepth }: import("../types.js").VPCodecOptions): string;
/**
 * Get a codec human readbable name
 * @param {string} codec a codec string (avc1[.PPCCLL] eg. "avc1.640028")
 * @returns {string}
 */
export function getCodecName(codec: string): string;
