export default FFmpegEncoder;
export type FFmpegEncoderOptions = {
    encoderOptions?: any;
};
export type FFmpegEncoderEncoderOptions = any;
/**
 * @typedef {object} FFmpegEncoderOptions
 * @property {FFmpegEncoderEncoderOptions} [encoderOptions={}]
 */
/**
 * @typedef {import("@ffmpeg/ffmpeg/dist/esm/types.js").FFMessageLoadConfig} FFmpegEncoderEncoderOptions
 * @see [FFmpeg#load]{@link https://ffmpegwasm.netlify.app/docs/api/ffmpeg/classes/FFmpeg#load}
 */
declare class FFmpegEncoder extends Encoder {
    static supportedExtensions: string[];
    /**
     * @param {FFmpegEncoderOptions} [options]
     */
    constructor(options?: FFmpegEncoderOptions);
    init(options: any): Promise<void>;
    encoder: any;
    frameCount: number;
    encode(frame: any, frameNumber: any): Promise<void>;
    stop(): Promise<any>;
    dispose(): Promise<void>;
}
import Encoder from "./Encoder.js";
